AWSTemplateFormatVersion: '2010-09-09'
Description: |

  AWS CloudFormation for AWS Korea SA Assignment
  This is the AWS CloudFormation template which will be used to assess the capability of the candidate.
  AWS resources used if you create a stack from this template and consume all your promotional credit.

Parameters:
  CandidateName:
    Description: 'Please input your name here:'
    Type: String
    MaxLength: '30'
    MinLength: '3'
    ConstraintDescription: 'Please input your full name.'
  OperatorEMail:
    Description: EMail address to notify if there are any scaling operations
    Type: String
    AllowedPattern: >-
      ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: must be a valid email address.

Resources:
  NotificationTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      Subscription:
        - Endpoint: !Ref OperatorEMail
          Protocol: email

  SAAVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      InstanceTenancy: default
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Environment
          Value: sa-assignment
        - Key: Name
          Value: !Join ['-', [SAAVPC, !Ref 'CandidateName']]

  SAAPublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: ap-northeast-2a
      MapPublicIpOnLaunch: 'True'
      VpcId: !Ref 'SAAVPC'
      Tags:
        - Key: environment
          Value: sa-assignment
        - Key: Name
          Value: !Join ['-', [PublicSubnetA, !Ref 'CandidateName']]

  SAAPublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: ap-northeast-2c
      MapPublicIpOnLaunch: 'True'
      VpcId: !Ref 'SAAVPC'
      Tags:
        - Key: Environment
          Value: sa-assignment
        - Key: Name
          Value: !Join ['-', [PublicSubnetB, !Ref 'CandidateName']]

  SAAPrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: ap-northeast-2a
      VpcId: !Ref 'SAAVPC'
      Tags:
        - Key: Environment
          Value: sa-assignment
        - Key: Name
          Value: !Join ['-', [PrivateSubnetA, !Ref 'CandidateName']]

  SAAPrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: ap-northeast-2c
      VpcId: !Ref 'SAAVPC'
      Tags:
        - Key: Environment
          Value: sa-assignment
        - Key: Name
          Value: !Join ['-', [PrivateSubnetB, !Ref 'CandidateName']]

  SAAIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Environment
          Value: sa-assignment
        - Key: Name
          Value: !Join ['-', [IGW, !Ref 'CandidateName']]

  SAANetworkACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref 'SAAVPC'
      Tags:
        - Key: Environment
          Value: sa-assignment
        - Key: Name
          Value: !Join ['-', [NACL, !Ref 'CandidateName']]

  SAARouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'SAAVPC'
      Tags:
        - Key: Environment
          Value: sa-assignment
        - Key: Name
          Value: !Join ['-', [PublicRouteTable, !Ref 'CandidateName']]

  SAARouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'SAAVPC'
      Tags:
        - Key: Environment
          Value: sa-assignment
        - Key: Name
          Value: !Join ['-', [PrivateRouteTable, !Ref 'CandidateName']]

  SAAInstance1:
    Type: AWS::EC2::Instance
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: ami-dac312b4
      InstanceType: t2.micro
      Monitoring: 'false'
      UserData: IyEvYmluL2Jhc2gNCnl1bSB1cGRhdGUgLXkNCnl1bSBpbnN0YWxsIC15IGh0dHBkMjQNCnNlcnZpY2UgaHR0cGQgc3RhcnQNCmNoa2NvbmZpZyBodHRwZCBvbg0KZ3JvdXBhZGQgd3d3DQp1c2VybW9kIC1hIC1HIHd3dyBlYzItdXNlcg0KY2hvd24gLVIgcm9vdDp3d3cgL3Zhci93d3cNCmNobW9kIDI3NzUgL3Zhci93d3cNCmZpbmQgL3Zhci93d3cgLXR5cGUgZCAtZXhlYyBjaG1vZCAyNzc1IHt9ICsNCmZpbmQgL3Zhci93d3cgLXR5cGUgZiAtZXhlYyBjaG1vZCAwNjY0IHt9ICsNCmVjaG8gJzxodG1sPjxoZWFkPjx0aXRsZT5TdWNjZXNzITwvdGl0bGU+PC9oZWFkPjxib2R5PjxpZnJhbWUgd2lkdGg9IjU2MCIgaGVpZ2h0PSIzMTUiIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvSnMyMXhLTUZkd3ciIGZyYW1lYm9yZGVyPSIwIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+PGhyPlJlZmVyZW5jZXM6IDxiciAvPjxhIGhyZWY9Imh0dHBzOi8vbWVkaWEuYW1hem9ud2Vic2VydmljZXMuY29tL0FXU19DbG91ZF9CZXN0X1ByYWN0aWNlcy5wZGYiPkNsb3VkIEFyY2hpdGVjdHVyZSBiZXN0IHByYWN0aWNlczwvYT48YnIgLz48YSBocmVmPSJodHRwczovL2QwLmF3c3N0YXRpYy5jb20vd2hpdGVwYXBlcnMvYXJjaGl0ZWN0dXJlL0FXU19XZWxsLUFyY2hpdGVjdGVkX0ZyYW1ld29yay5wZGYiPldlbGwtQXJjaGl0ZWN0ZWQgRnJhbWV3b3JrPC9hPjxiciAvPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmFtYXpvbi5qb2JzL2VuL3ByaW5jaXBsZXMiPkFtYXpvbiBMZWFkZXJzaGlwIFByaW5jaXBsZXM8L2E+PGJyIC8+DQo8L2JvZHk+PC9odG1sPicgPiAvdmFyL3d3dy9odG1sL2RlbW8uaHRtbA==
      Tags:
        - Key: Environment
          Value: sa-assignment
        - Key: Name
          Value: !Join ['-', [Instance1, !Ref 'CandidateName']]
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeleteOnTermination: 'true'
          Description: 'Primary network interface'
          DeviceIndex: 0
          SubnetId: !Ref 'SAAPublicSubnetA'
          GroupSet: [!Ref 'SAASGAPP']

  SAAInstance2:
    Type: AWS::EC2::Instance
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: ami-dac312b4
      InstanceType: t2.micro
      Monitoring: 'false'
      UserData: IyEvYmluL2Jhc2gNCnl1bSB1cGRhdGUgLXkNCnl1bSBpbnN0YWxsIC15IGh0dHBkMjQNCnNlcnZpY2UgaHR0cGQgc3RhcnQNCmNoa2NvbmZpZyBodHRwZCBvbg0KZ3JvdXBhZGQgd3d3DQp1c2VybW9kIC1hIC1HIHd3dyBlYzItdXNlcg0KY2hvd24gLVIgcm9vdDp3d3cgL3Zhci93d3cNCmNobW9kIDI3NzUgL3Zhci93d3cNCmZpbmQgL3Zhci93d3cgLXR5cGUgZCAtZXhlYyBjaG1vZCAyNzc1IHt9ICsNCmZpbmQgL3Zhci93d3cgLXR5cGUgZiAtZXhlYyBjaG1vZCAwNjY0IHt9ICsNCmVjaG8gJzxodG1sPjxoZWFkPjx0aXRsZT5TdWNjZXNzITwvdGl0bGU+PC9oZWFkPjxib2R5PjxpZnJhbWUgd2lkdGg9IjU2MCIgaGVpZ2h0PSIzMTUiIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvSnMyMXhLTUZkd3ciIGZyYW1lYm9yZGVyPSIwIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+PGhyPlJlZmVyZW5jZXM6IDxiciAvPjxhIGhyZWY9Imh0dHBzOi8vbWVkaWEuYW1hem9ud2Vic2VydmljZXMuY29tL0FXU19DbG91ZF9CZXN0X1ByYWN0aWNlcy5wZGYiPkNsb3VkIEFyY2hpdGVjdHVyZSBiZXN0IHByYWN0aWNlczwvYT48YnIgLz48YSBocmVmPSJodHRwczovL2QwLmF3c3N0YXRpYy5jb20vd2hpdGVwYXBlcnMvYXJjaGl0ZWN0dXJlL0FXU19XZWxsLUFyY2hpdGVjdGVkX0ZyYW1ld29yay5wZGYiPldlbGwtQXJjaGl0ZWN0ZWQgRnJhbWV3b3JrPC9hPjxiciAvPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmFtYXpvbi5qb2JzL2VuL3ByaW5jaXBsZXMiPkFtYXpvbiBMZWFkZXJzaGlwIFByaW5jaXBsZXM8L2E+PGJyIC8+DQo8L2JvZHk+PC9odG1sPicgPiAvdmFyL3d3dy9odG1sL2RlbW8uaHRtbA==
      Tags:
        - Key: Environment
          Value: sa-assignment
        - Key: Name
          Value: !Join ['-', [Instance2, !Ref 'CandidateName']]
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeleteOnTermination: 'true'
          Description: 'Primary network interface'
          DeviceIndex: 0
          SubnetId: !Ref 'SAAPublicSubnetB'
          GroupSet: [!Ref 'SAASGAPP']
          
  ELBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref 'SAATGELB'
      LoadBalancerArn: !Ref 'SAAELB'
      Port: 80
      Protocol: HTTP

  SAAELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets: [!Ref 'SAAPublicSubnetA', !Ref 'SAAPublicSubnetB']
      SecurityGroups: [!Ref 'SAASGELB']

  SAATGELB:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 60
      UnhealthyThresholdCount: 10
      HealthCheckPath: /
      Name: 'MyTargetGroup'
      Port: 80
      Protocol: HTTP
      VpcId: !Ref 'SAAVPC'
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
      Targets: 
        - Id: !Ref SAAInstance1
          Port: 80
        - Id: !Ref SAAInstance2
          Port: 80

  SAASGELB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SA Assignment - ELB security group
      VpcId: !Ref 'SAAVPC'
      Tags:
        - Key: Environment
          Value: sa-assignment
        - Key: Name
          Value: ELBSecurityGroup
      "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": 80,
            "ToPort": 80
          }
        ]

  SAASGAPP:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SA Assignment - App server security group
      VpcId: !Ref 'SAAVPC'
      Tags:
        - Key: Environment
          Value: sa-assignment
        - Key: Name
          Value: AppServerSecurityGroup
      "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": 80,
            "ToPort": 80
          }
        ]

  SAANACLEntry1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
      NetworkAclId: !Ref 'SAANetworkACL'

  SAANACLEntry2:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
      NetworkAclId: !Ref 'SAANetworkACL'

  SAANACLAssoc1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref 'SAANetworkACL'
      SubnetId: !Ref 'SAAPublicSubnetA'

  SAANACLAssoc2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref 'SAANetworkACL'
      SubnetId: !Ref 'SAAPublicSubnetB'

  SAANACLAssoc3:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref 'SAANetworkACL'
      SubnetId: !Ref 'SAAPrivateSubnetA'

  SAANACLAssoc4:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref 'SAANetworkACL'
      SubnetId: !Ref 'SAAPrivateSubnetB'

  SAAIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'SAAVPC'
      InternetGatewayId: !Ref 'SAAIGW'

  SAASubnetRoutePublicA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'SAARouteTablePublic'
      SubnetId: !Ref 'SAAPublicSubnetA'

  SAASubnetRoutePublicB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'SAARouteTablePublic'
      SubnetId: !Ref 'SAAPublicSubnetB'

  SAASubnetRoutePrivateA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'SAARouteTablePrivate'
      SubnetId: !Ref 'SAAPrivateSubnetA'

  SAASubnetRoutePrivateB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'SAARouteTablePrivate'
      SubnetId: !Ref 'SAAPrivateSubnetB'

  SAARoutePublic:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref 'SAARouteTablePublic'
      GatewayId: !Ref 'SAAIGW'
    DependsOn: SAAIGW

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicReadWrite
      LifecycleConfiguration:
        Rules:
        - Id: GlacierRule
          Prefix: glacier
          Status: Enabled
          ExpirationInDays: '365'
          Transitions:
            - TransitionInDays: '1'
              StorageClass: Glacier

  SAADBSubnetGroup: 
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupDescription: "description"
      SubnetIds: [!Ref 'SAAPrivateSubnetA', !Ref 'SAAPrivateSubnetB']


Outputs:
  LoadBalancerDNSName:
    Description: 'The DNS name of the load balancer'
    Value: !GetAtt SAAELB.DNSName
