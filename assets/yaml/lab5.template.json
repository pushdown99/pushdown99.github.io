{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"AWS CloudFormation Sample Template UpdateTutorial Part 5: Sample template that can be used to test EC2 updates convert a single instance deployment into an Auto Scaled, Load Balanced solutio. **WARNING** This template creates an Amazon Ec2 Instance. You will be billed for the AWS resources used if you create a stack from this template.",
   "Parameters":{
      "WebServerKeyName": {
      "Description": "Name of an existing Amazon EC2 KeyPair for SSH access",
	  "Type": "AWS::EC2::KeyPair::KeyName",
   	  "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
      "WebServerInstanceType":{
         "Description":"WebServer EC2 instance type",
         "Type":"String",
         "Default":"t2.micro",
         "AllowedValues":[
            "t2.micro",
            "t2.medium"
         ],
         "ConstraintDescription":"must be a valid EC2 instance type."
      },
      "VPCId": {
          "Description": "VPC ID of the Lab VPC",
          "Type": "String"
      },
      "VPCPublicSubnetId" : {
        "Description": "Subnet ID of the public subnet within the Lab VPC",
        "Type": "String"
      },
      "VPCPublicSubnetAZ" : {
        "Description": "AZ of the public subnet within the Lab VPC",
        "Type": "String"
      }
   },
   "Mappings":{
      "AWSInstanceType2Arch":{
         "t2.micro":{
            "Arch":"64"
         },
         "t2.medium":{
            "Arch":"64"
         }
      },
      "AWSRegionArch2AMI": {
        "us-east-1": {
          "64": "ami-8c1be5f6"
        },
        "us-east-2": {
          "64": "ami-c5062ba0"
        },
        "us-west-1": {
          "64": "ami-02eada62"
        },
        "us-west-2": {
          "64": "ami-e689729e"
        },
        "ap-southeast-1": {
          "64": "ami-0797ea64"
        },
        "ap-southeast-2": {
          "64": "ami-8536d6e7"
        },
        "ap-northeast-1": {
          "64": "ami-2a69be4c"
        },
        "ap-northeast-2": {
          "64": "ami-9bec36f5"
        },
        "eu-west-1": {
          "64": "ami-acd005d5"
        },
        "eu-central-1": {
          "64": "ami-c7ee5ca8"
        },
        "sa-east-1": {
          "64": "ami-f1344b9d"
        }
      }
    },
   "Resources":{
   "WebServerInstanceProfile":{
         "Type":"AWS::IAM::InstanceProfile",
         "Properties":{
            "Path":"/",
            "Roles":["ec2-role-2"]
         }
      },
      "WebServerSecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupDescription":"Enable HTTP",
            "VpcId":{
               "Ref":"VPCId"
            },
            "SecurityGroupIngress":[
               {
                  "IpProtocol":"tcp",
                  "FromPort":"80",
                  "ToPort":"80",
                  "CidrIp":"0.0.0.0/0"
               }
            ]
         }
      },
      "ElasticLoadBalancer":{
         "Type":"AWS::ElasticLoadBalancing::LoadBalancer",
         "Properties":{
            "Subnets":[{"Ref":"VPCPublicSubnetId"}],
            "SecurityGroups":[{"Ref":"WebServerSecurityGroup"}],
            "Listeners":[
               {
                  "LoadBalancerPort":"80",
                  "InstancePort":"80",
                  "Protocol":"HTTP"
               }
            ],
            "HealthCheck":{
               "Target":"HTTP:80/",
               "HealthyThreshold":"3",
               "UnhealthyThreshold":"5",
               "Interval":"30",
               "Timeout":"5"
            }
         }
      },
      "WebServerGroup":{
         "Type":"AWS::AutoScaling::AutoScalingGroup",
         "Properties":{
           "AvailabilityZones": [{"Ref":"VPCPublicSubnetAZ"}],
            "LaunchConfigurationName":{
               "Ref":"WebServerConfig"
            },
            "MinSize":"1",
            "MaxSize":"2",
            "LoadBalancerNames":[
               {
                  "Ref":"ElasticLoadBalancer"
               }
            ],
            "VPCZoneIdentifier" : [{"Ref":"VPCPublicSubnetId"}]
         }
      },
      "WebServerConfig":{
         "Type":"AWS::AutoScaling::LaunchConfiguration",
         "Metadata":{
            "Comment":"Install a simple PHP application",
            "AWS::CloudFormation::Init":{
               "config":{
                  "packages":{
                     "yum":{
                        "httpd":[

                        ],
                        "php":[

                        ]
                     }
                  },
                  "files":{
                     "/var/www/html/index.php":{
                        "content":{
                           "Fn::Join":[
                              "",
                              [
                                 "<?php\n",
                                 "echo '<h1>AWS CloudFormation sample PHP application</h1>';\n",
                                 "echo 'Highly available, load balanced stack updated version via UpdateStack';\n ",
                                 "?>\n"
                              ]
                           ]
                        },
                        "mode":"000644",
                        "owner":"apache",
                        "group":"apache"
                     }
                  },
                  "services":{
                     "sysvinit":{
                        "httpd":{
                           "enabled":"true",
                           "ensureRunning":"true"
                        },
                        "sendmail":{
                           "enabled":"false",
                           "ensureRunning":"false"
                        }
                     }
                  }
               }
            }
         },
         "Properties":{
            "ImageId":{
               "Fn::FindInMap":[
                  "AWSRegionArch2AMI",
                  {
                     "Ref":"AWS::Region"
                  },
                  {
                     "Fn::FindInMap":[
                        "AWSInstanceType2Arch",
                        {
                           "Ref":"WebServerInstanceType"
                        },
                        "Arch"
                     ]
                  }
               ]
            },
            "InstanceType":{
               "Ref":"WebServerInstanceType"
            },
            "SecurityGroups":[
               {
                  "Ref":"WebServerSecurityGroup"
               }
            ],
            "KeyName":{
               "Ref":"WebServerKeyName"
            },
            "IamInstanceProfile":{
               "Ref":"WebServerInstanceProfile"
            },
            "UserData":{
               "Fn::Base64":{
                  "Fn::Join":[
                     "",
                     [
                        "#!/bin/bash\n",
                        "yum update -y aws-cfn-bootstrap\n",
                        "# Helper function\n",
                        "function error_exit\n",
                        "{\n",
                        "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '",
                        {
                           "Ref":"WebServerWaitHandle"
                        },
                        "'\n",
                        "  exit 1\n",
                        "}\n",
                        "# Install the simple web page\n",
                        "/opt/aws/bin/cfn-init -s ",
                        {
                           "Ref":"AWS::StackName"
                        },
                        " -r WebServerConfig ",
                        "         --region ",
                        {
                           "Ref":"AWS::Region"
                        },
                        " || error_exit 'Failed to run cfn-init'\n",
                        "# Start up the cfn-hup daemon to listen for changes to the Web Server metadata\n",
                        "/opt/aws/bin/cfn-hup || error_exit 'Failed to start cfn-hup'\n",
                        "# All done so signal success\n",
                        "/opt/aws/bin/cfn-signal -e 0 -r \"WebServer setup complete\" '",
                        {
                           "Ref":"WebServerWaitHandle"
                        },
                        "'\n"
                     ]
                  ]
               }
            }
         }
      },
      "WebServerWaitHandle":{
         "Type":"AWS::CloudFormation::WaitConditionHandle"
      },
      "WebServerWaitCondition":{
         "Type":"AWS::CloudFormation::WaitCondition",
         "DependsOn":"WebServerGroup",
         "Properties":{
            "Handle":{
               "Ref":"WebServerWaitHandle"
            },
            "Timeout":"600"
         }
      }
   },
   "Outputs":{
      "WebsiteURL":{
         "Value":{
            "Fn::Join":[
               "",
               [
                  "http://",
                  {
                     "Fn::GetAtt":[
                        "ElasticLoadBalancer",
                        "DNSName"
                     ]
                  }
               ]
            ]
         },
         "Description":"Application URL"
      }
   }
}
